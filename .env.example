# AI Opportunity Browser API Configuration
# Copy this file to .env and update the values for your environment

# Application Settings
APP_NAME="AI Opportunity Browser API"
VERSION="1.0.0"
ENVIRONMENT="development"
DEBUG=true

# Server Settings
HOST="0.0.0.0"
PORT=8000

# Security Settings
SECRET_KEY="your-secret-key-change-in-production-make-it-long-and-random"
ALGORITHM="HS256"
ACCESS_TOKEN_EXPIRE_MINUTES=30

# CORS Settings (comma-separated)
ALLOWED_ORIGINS="http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000"
ALLOWED_HOSTS="localhost,127.0.0.1"

# Database Settings
DATABASE_URL="postgresql://postgres:postgres@localhost:5432/ai_opportunity_browser"
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# Redis Settings
REDIS_URL="redis://localhost:6379/0"
REDIS_EXPIRE_SECONDS=3600

# Vector Database Settings (Pinecone)
PINECONE_API_KEY=""
PINECONE_ENVIRONMENT="us-west1-gcp"
PINECONE_INDEX_NAME="ai-opportunities"

# Rate Limiting Settings
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# Logging Settings
LOG_LEVEL="INFO"
LOG_FORMAT="%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Event Bus Settings
EVENT_BUS_TYPE="redis"  # Options: redis, kafka
ENABLE_EVENT_HANDLERS=true
ENABLED_EVENT_HANDLERS="all"  # Options: all, or comma-separated list: opportunity,user,agent,system,market_signal

# Event Bus - Redis Configuration
EVENT_TTL_SECONDS=604800  # 7 days
EVENT_MAX_RETRIES=3

# Event Bus - Kafka Configuration (when EVENT_BUS_TYPE=kafka)
KAFKA_BOOTSTRAP_SERVERS="localhost:9092"
KAFKA_TOPIC_PREFIX="ai-opportunity"
KAFKA_CONSUMER_GROUP="ai-opportunity-consumers"
KAFKA_RETENTION_MS=604800000  # 7 days
KAFKA_PARTITIONS=3
KAFKA_REPLICATION_FACTOR=1

# Event Processing Settings
ENABLE_EVENT_SOURCING=true
ENABLE_EVENT_REPLAY=true
EVENT_BATCH_SIZE=100
EVENT_FLUSH_INTERVAL_MS=1000
ENABLE_EVENT_COMPRESSION=true
ENABLE_EVENT_ENCRYPTION=false

# External API Keys (Optional - for future phases)
REDDIT_CLIENT_ID=""
REDDIT_CLIENT_SECRET=""
GITHUB_TOKEN=""
OPENAI_API_KEY=""
ANTHROPIC_API_KEY=""